plugins {
    id 'application'
    id 'java'
    id 'java-library'

    id 'maven-publish'
}

group = 'com.qaware.mcp'
version = '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // mcp
    implementation 'io.modelcontextprotocol.sdk:mcp:0.11.3'
    implementation 'org.eclipse.jetty:jetty-server:12.0.22'
    implementation 'org.eclipse.jetty.ee10:jetty-ee10-servlet:12.0.22'

    // json
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // logging
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'com.qaware.mcp.Server'
}

tasks.named('run', JavaExec) {
    classpath += files(".")
}

jar {
    archiveBaseName = 'mcp-server-kickstart'
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
}

tasks.register('fatJar', Jar) {
    group = 'build'
    description = "Assembles a fat jar archive containing the classes of the 'main' feature and all dependencies."

    archiveBaseName = 'mcp-server-kickstart-all'
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
